<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        				http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        				http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
						http://www.springframework.org/schema/context
        				http://www.springframework.org/schema/context/spring-context-4.0.xsd
        				http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	<!-- 配置服务器标示,在IP和port都相同的情况,才使用服务器标示来区分服务器		
	<bean id="myGame" class="sfs2x.extensions.games.xinqiwan.MyGame">
		<property name="serverLabel" value="幻想星空" />  
	</bean> 
 -->
	<!-- 配置一个数据源 
	<bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.gjt.mm.mysql.Driver"/>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/yuzhouhuanjing?autoReconnect=true&amp;autoReconnectForPools=true"/>
		<property name="username" value="root" />
		<property name="password" value="ycwlovecandymo"/>
		
		<! 连接池 配置 

		<property name="initialSize" value="10" />
		<property name="maxActive" value="50" />
		<property name="maxIdle" value="20" />
		<property name="minIdle" value="5" />
		<property name="maxWait" value="60000" />
		
		<! 解决mysql 8小时连接失效的问题 ?autoReconnect=true&amp;autoReconnectForPools=true
		<property name="validationQuery"> <value>SELECT 1</value>  </property>
		<property name="testOnBorrow">    <value>true</value>      </property>

		<! 
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}" />
		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}" /> 
		
	</bean>
	-->  
	<!-- XA方式 -->
	<bean id="dataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" destroy-method="close">
	    <property name="uniqueResourceName" value="db_main"/>
	    <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
	    <property name="xaProperties">
	        <props>
	            <prop key="url">jdbc:mysql://127.0.0.1:3306/yuzhouhuanjing?autoReconnect=true&amp;autoReconnectForPools=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true</prop>
	            <prop key="user">root</prop>
	            <prop key="password">ycwlovecandymo</prop>
	        </props>
	    </property>
	    <property name="minPoolSize" value="10" />
	    <property name="maxPoolSize" value="100" />
	    <property name="borrowConnectionTimeout" value="30" />
	    <property name="testQuery" value="select 1" />
	    <property name="maintenanceInterval" value="60" />
	</bean>
	
	<!-- 
	<context:property-placeholder location="jdbc.properties"/> 
	-->

	<!-- 配置一个NamedParameterJdbcTemplate模板 使用构造函数注入器 -->  
	<bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">  
		<constructor-arg ref="dataSource"/>  
	</bean>
	
	<!-- 基于数据源的事务管理器 -->  
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
		<property name="dataSource" ref="dataSource"/>  
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager"/>
 	
	<!-- 切面类 -->
	<!--<bean id="myLogging" class="sfs2x.extensions.games.xinqiwan.aop.Logging"></bean> -->
	<!-- AOP配置 -->
	<!--
	<aop:config>
		<aop:aspect id="logStudent" ref="myLogging">
		<aop:pointcut id="allMethod" expression="execution(* edu.njupt.zhb.*.*(..))"/>
		<aop:before pointcut-ref="allMethod" method="beforeAdvice"/>
		<aop:after  pointcut-ref="allMethod" method="afterAdvice"/>
		<aop:after-returning pointcut-ref="allMethod" returning="retVal" method="afterReturningAdvice"/>
		<aop:after-throwing pointcut-ref="allMethod" throwing="ex" method="afterThrowingAdvice"/>
		</aop:aspect>
	</aop:config>
	-->
	<!-- 配置Dao方法一 -->
	<!--
	<bean id="dao" abstract="true">  
		<property name="dataSource" ref="dataSource" />  
	</bean> 

	<bean id="serverlistDaoImple" parent="dao" class="sfs2x.extensions.games.xinqiwan.dao.imple.ServerlistDaoImple">  
	</bean> 
	-->
	
	<!-- 配置Dao方法二 -->
	<!--<bean id="serverlistDao" class="sfs2x.extensions.games.xinqiwan.dao.imple.ServerlistDaoImple">  
		<property name="dataSource" ref="dataSource" />  
	</bean>  -->


    <!-- services -->
    <!--<bean id="serverlistService" class="sfs2x.extensions.games.xinqiwan.service.imple.ServerlistServiceImple">
        <property name="serverlistDao" ref="serverlistDao"/>
    </bean> -->
    <!--
    <bean id="roleServiceEx" parent="roleService" class="sfs2x.extensions.games.xinqiwan.service.ex.imple.RoleServiceExImple">
		<property name="createroleDao" ref="createroleDao"/>
	</bean>
	-->
</beans>